x 2022-09-11 When the user `focus` on  the tags input field, show all previous tags he has created (below the input tag) pri:B @Feature @BeforePublish
x 2022-09-11 When the user `focus` on the browser input field, show some browser names (below the input tag) pri:B @Feature @BeforePublish
x 2022-08-31 Open the link when the user clicks on the open button pri:B @Feature
x 2022-08-31 Link's creaton DATE pri:A
(B) Hiding links Option @Feature
(B) Show description and thumbnails @Feature
(B) If the webpage returns 404, then warn user @Feature
x 2022-08-26 Give user an option to whether he wants to create a custom title or he wants the webpage's title pri:A @Task @BeforePublish
(C) Make a discord bot for creating and reading these links +DiscordBot @Feature
(C) Make a tui application +Cli @Feature
(B) Split this project into several parts, such as `core`, `discord-bot`, `tui`, etc. @Task @BeforePublish
x 2022-08-27 Use contexts instead of passing by props over and over again pri:A @BeforePublish @Task
(B) Try to remove `clone()`s from codes @Task @BeforePublish
(C) Make unit tests @Task
x 2022-08-31 Remove duplicate tags when creating  links pri:A
(A) Check why `cargo doc` is not working
(C) keyboard shortcuts @Feature
(C) Make a browser extension who can run the commands/cli to add a link from browser +Cli @Feature
x 2022-09-03 Get the domain name pri:A
x 2022-09-03 Make a builder struct for `Link` for creating the Link pri:A
x 2022-09-04 Make a struct that will represent the error. It will contain what the error is, why it occured, How to fix. It can also contain the *actual* error pri:A
(A) Make a component for tracking states
(C) Link refresh feature. Also all links (together) refresh feature @Feature
x 2022-09-08 use labels in forms instead of placeholder pri:A
(B) Add documentations @Task @BeforePublish
(B) Check which platform (returned by tauri api) is for MacOS.     @BUG @BeforePublish @Task
x 2022-09-22 trim() every values when getting from browser   pri:B @BeforePublish
(B) Change logo and images   @BeforePublish
(C) Get `url` from the clipboard @Feature
x 2022-09-11 make a hook who to store the input value onchange pri:A
(B) Give option to choose whether the user wants to (search on google || or youtube || or provide the url of the website directly). If the user wants to search on google, then accept the search string and create the url programatically -> start the url with google's search url and then put the string into the url @Feature
(C) Make a struct that will hold some options for the use_input hook's input value. Make it a UseStateHandle, then return it. When user change it, the input's value's option will be change. For example: make an option `disable`, if this is true, then the hook will not accept any string for the input's value.
x 2022-09-20 Make component for making forms pri:A
(B) Show the logo of each browser in forms @Feature
x 2022-09-20 Cancel button on form pri:A
x 2022-09-13 Detect if the user clicks outside of the select div of the form, if so then remove the options div pri:A
x 2022-09-28 Detect if the user clicks outside the form component, if so, remove the form component pri:A
(C) Download video option @Feature
(B) Comment @Task
(C) Try to style form's labels with Rust instead of js @Task
(C) Neon colors @Feature
x 2022-09-20 If user doesn't give any tags, then the link doesn't show.. Fix it pri:A @BUG
x 2022-09-20 If the EditLink component is opend, and the user deletes that link, then hide the component pri:A
(B) Make a struct for holding some restrictions for the form, it will use the struct when the form is submitted. After that if the user do/type something against the restriction, then show an error. Store it in a struct so it can be reused @Task
(A) If the user types on the input which is disabled from Rust, then show him/her (below the input) an error msg or when the user `focus`es on the input, immediately `blur` it.
(C) Search Links @Feature
(B) Filter by priority @Feature
(B) animate the form when rendering (just like when hiding) +styles @Task
x 2022-09-27 Hide all links infos, just show the title... When the user double clicks on the link on the browser, When the user right click, show some options (open, edit, delete, etc..),Give an option to toggle "show full details". pri:A
(B) Filter by domain name @Feature
(B) Button to generate random links for development only @Task
x 2022-09-23 When the user opens the form, turn rest element's opacity low pri:A
(B) Give a message or show something when the user won't have any links @Task
(A) Show a loading bar while link in validating
(A) copy the url to user's clipboard when user clicks on the copy button
x 2022-09-25 Change the button's styles. pri:A
(B) Show an error if the user doesn't have the browser while opening the link @Task
(A) Return ErrorReporter struct when browser fails to open
(B) Use tokio to generate random links
(A) create mixins scss
(B) See if reading/writting code from Rust directly is fast or same
(A) Iterate tags and at the same time, update it.
(C) history of what the user do i.e. adds new link, share the link, edit the link etc. @Feature
(C) Links and tag custom colors +Premium @Feature
(B) Give an animation when any link is deleted +styles @Task
(D) Increase the scope of this project. Turn this project into a note saving, file saving, file sharing, files hosting, note hosting, collaborating, http links saving etc....
(A) Make a Popup component and put the createlink and editlink and displayerror into that.
(A) Show a laoding bar (on the border of the button) when generating random links
(A) Make custom title instead of using the `title` property
(B) Handle error when browser not available in user's device. @BUGFIX
(A) Create a validate method inside `Link` sturct
(B) Make a plugin system @Feature +plugin
(A) Check if the browser is present in user's device or not before creating link. 
(A) Test macos browser opening @BUG 