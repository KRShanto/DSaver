(B) When the user `focus` on  the tags input field, show all previous tags he has created (below the input tag) @Feature @BeforePublish
(B) When the user `focus` on the browser input field, show some browser names (below the input tag) @Feature @BeforePublish
x 2022-08-31 Open the link when the user clicks on the open button pri:B @Feature
x 2022-08-31 Link's creaton DATE pri:A
(B) Hiding links Option @Feature
(B) Show description and thumbnails @Feature
(B) If the webpage returns 404, then warn user @Feature
x 2022-08-26 Give user an option to whether he wants to create a custom title or he wants the webpage's title pri:A @Task @BeforePublish
(C) Make a discord bot for creating and reading these links +DiscordBot @Feature
(C) Make a tui application +Cli @Feature
(B) Split this project into several parts, such as `core`, `discord-bot`, `tui`, etc. @Task @BeforePublish
x 2022-08-27 Use contexts instead of passing by props over and over again pri:A @BeforePublish @Task
(B) Try to remove `clone()`s from codes @Task @BeforePublish
(C) Make unit tests @Task
x 2022-08-31 Remove duplicate tags when creating  links pri:A
(A) Check why `cargo doc` is not working
(C) keyboard shortcuts @Feature
(C) Make a browser extension who can run the commands/cli to add a link from browser +Cli @Feature
(A) check why `open` crate giving compile error that platform not supported. But it is working fine!
(A) Get the domain name
(A) use `url` crate and check if the user has input correct url or not. If not, try to add `http` protocol. If again it is incorrect then tell the user to input a valid url..... Then get the host domain name
(A) Make a builder struct for `Link` for creating the Link
(A) Make a struct that will represent the error. It will contain what the error is, why it occured, How to fix. It can also contain the *actual* error
